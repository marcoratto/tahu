<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sparkplug_b.proto

namespace Org\Eclipse\Tahu\Protobuf\Payload;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>org.eclipse.tahu.protobuf.Payload.MetaData</code>
 */
class MetaData extends \Google\Protobuf\Internal\Message
{
    /**
     * Bytes specific metadata
     *
     * Generated from protobuf field <code>optional bool is_multi_part = 1;</code>
     */
    protected $is_multi_part = null;
    /**
     * General metadata
     *
     * Generated from protobuf field <code>optional string content_type = 2;</code>
     */
    protected $content_type = null;
    /**
     * File size, String size, Multi-part size, etc
     *
     * Generated from protobuf field <code>optional uint64 size = 3;</code>
     */
    protected $size = null;
    /**
     * Sequence number for multi-part messages
     *
     * Generated from protobuf field <code>optional uint64 seq = 4;</code>
     */
    protected $seq = null;
    /**
     * File metadata
     *
     * Generated from protobuf field <code>optional string file_name = 5;</code>
     */
    protected $file_name = null;
    /**
     * File type (i.e. xml, json, txt, cpp, etc)
     *
     * Generated from protobuf field <code>optional string file_type = 6;</code>
     */
    protected $file_type = null;
    /**
     * md5 of data
     *
     * Generated from protobuf field <code>optional string md5 = 7;</code>
     */
    protected $md5 = null;
    /**
     * Catchalls and future expansion
     *
     * Generated from protobuf field <code>optional string description = 8;</code>
     */
    protected $description = null;
    /**
     * extensions                      9 to max; // For proto2
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any extensions = 9;</code>
     */
    private $extensions;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $is_multi_part
     *           Bytes specific metadata
     *     @type string $content_type
     *           General metadata
     *     @type int|string $size
     *           File size, String size, Multi-part size, etc
     *     @type int|string $seq
     *           Sequence number for multi-part messages
     *     @type string $file_name
     *           File metadata
     *     @type string $file_type
     *           File type (i.e. xml, json, txt, cpp, etc)
     *     @type string $md5
     *           md5 of data
     *     @type string $description
     *           Catchalls and future expansion
     *     @type array<\Google\Protobuf\Any>|\Google\Protobuf\Internal\RepeatedField $extensions
     *           extensions                      9 to max; // For proto2
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\SparkplugB::initOnce();
        parent::__construct($data);
    }

    /**
     * Bytes specific metadata
     *
     * Generated from protobuf field <code>optional bool is_multi_part = 1;</code>
     * @return bool
     */
    public function getIsMultiPart()
    {
        return isset($this->is_multi_part) ? $this->is_multi_part : false;
    }

    public function hasIsMultiPart()
    {
        return isset($this->is_multi_part);
    }

    public function clearIsMultiPart()
    {
        unset($this->is_multi_part);
    }

    /**
     * Bytes specific metadata
     *
     * Generated from protobuf field <code>optional bool is_multi_part = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsMultiPart($var)
    {
        GPBUtil::checkBool($var);
        $this->is_multi_part = $var;

        return $this;
    }

    /**
     * General metadata
     *
     * Generated from protobuf field <code>optional string content_type = 2;</code>
     * @return string
     */
    public function getContentType()
    {
        return isset($this->content_type) ? $this->content_type : '';
    }

    public function hasContentType()
    {
        return isset($this->content_type);
    }

    public function clearContentType()
    {
        unset($this->content_type);
    }

    /**
     * General metadata
     *
     * Generated from protobuf field <code>optional string content_type = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setContentType($var)
    {
        GPBUtil::checkString($var, True);
        $this->content_type = $var;

        return $this;
    }

    /**
     * File size, String size, Multi-part size, etc
     *
     * Generated from protobuf field <code>optional uint64 size = 3;</code>
     * @return int|string
     */
    public function getSize()
    {
        return isset($this->size) ? $this->size : 0;
    }

    public function hasSize()
    {
        return isset($this->size);
    }

    public function clearSize()
    {
        unset($this->size);
    }

    /**
     * File size, String size, Multi-part size, etc
     *
     * Generated from protobuf field <code>optional uint64 size = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSize($var)
    {
        GPBUtil::checkUint64($var);
        $this->size = $var;

        return $this;
    }

    /**
     * Sequence number for multi-part messages
     *
     * Generated from protobuf field <code>optional uint64 seq = 4;</code>
     * @return int|string
     */
    public function getSeq()
    {
        return isset($this->seq) ? $this->seq : 0;
    }

    public function hasSeq()
    {
        return isset($this->seq);
    }

    public function clearSeq()
    {
        unset($this->seq);
    }

    /**
     * Sequence number for multi-part messages
     *
     * Generated from protobuf field <code>optional uint64 seq = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSeq($var)
    {
        GPBUtil::checkUint64($var);
        $this->seq = $var;

        return $this;
    }

    /**
     * File metadata
     *
     * Generated from protobuf field <code>optional string file_name = 5;</code>
     * @return string
     */
    public function getFileName()
    {
        return isset($this->file_name) ? $this->file_name : '';
    }

    public function hasFileName()
    {
        return isset($this->file_name);
    }

    public function clearFileName()
    {
        unset($this->file_name);
    }

    /**
     * File metadata
     *
     * Generated from protobuf field <code>optional string file_name = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setFileName($var)
    {
        GPBUtil::checkString($var, True);
        $this->file_name = $var;

        return $this;
    }

    /**
     * File type (i.e. xml, json, txt, cpp, etc)
     *
     * Generated from protobuf field <code>optional string file_type = 6;</code>
     * @return string
     */
    public function getFileType()
    {
        return isset($this->file_type) ? $this->file_type : '';
    }

    public function hasFileType()
    {
        return isset($this->file_type);
    }

    public function clearFileType()
    {
        unset($this->file_type);
    }

    /**
     * File type (i.e. xml, json, txt, cpp, etc)
     *
     * Generated from protobuf field <code>optional string file_type = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setFileType($var)
    {
        GPBUtil::checkString($var, True);
        $this->file_type = $var;

        return $this;
    }

    /**
     * md5 of data
     *
     * Generated from protobuf field <code>optional string md5 = 7;</code>
     * @return string
     */
    public function getMd5()
    {
        return isset($this->md5) ? $this->md5 : '';
    }

    public function hasMd5()
    {
        return isset($this->md5);
    }

    public function clearMd5()
    {
        unset($this->md5);
    }

    /**
     * md5 of data
     *
     * Generated from protobuf field <code>optional string md5 = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setMd5($var)
    {
        GPBUtil::checkString($var, True);
        $this->md5 = $var;

        return $this;
    }

    /**
     * Catchalls and future expansion
     *
     * Generated from protobuf field <code>optional string description = 8;</code>
     * @return string
     */
    public function getDescription()
    {
        return isset($this->description) ? $this->description : '';
    }

    public function hasDescription()
    {
        return isset($this->description);
    }

    public function clearDescription()
    {
        unset($this->description);
    }

    /**
     * Catchalls and future expansion
     *
     * Generated from protobuf field <code>optional string description = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * extensions                      9 to max; // For proto2
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any extensions = 9;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getExtensions()
    {
        return $this->extensions;
    }

    /**
     * extensions                      9 to max; // For proto2
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any extensions = 9;</code>
     * @param array<\Google\Protobuf\Any>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setExtensions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Any::class);
        $this->extensions = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(MetaData::class, \Org\Eclipse\Tahu\Protobuf\Payload_MetaData::class);

